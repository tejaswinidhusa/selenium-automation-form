/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package selenium.java.task;

import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLDecoder;
import java.time.Duration;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;

/**
 * Class will identify the web elements for the form given
 * at https://www.tutorialspoint.com/selenium/selenium_automation_practice.htm
 */
public class App {
        public WebDriver chromeDriver;

        /**
         * @param chromeDriver chrome browser driver
         */
        public App(WebDriver chromeDriver) {
                this.chromeDriver = chromeDriver;
        }

        /**
         * Method locates the first name field and passes the value
         * 
         * @param firstName string variable used to pass the value to the field
         */
        public void setFirstName(String firstName) {
                chromeDriver.findElement(By.name("firstname")).clear();
                chromeDriver.findElement(By.name("firstname")).sendKeys(firstName);
        }

        /**
         * Method locates the last name field and passes the value
         * 
         * @param lastName string variable used to pass the value to the field
         */
        public void setLastName(String lastName) {
                chromeDriver.findElement(By.name("lastname")).clear();
                chromeDriver.findElement(By.name("lastname")).sendKeys(lastName);
        }

        /**
         * Method locates the gender field and selects the value
         * 
         * @param gender string variable used to pass the value to the field
         */
        public void genderSelection(String gender) {
                chromeDriver.findElement(By.xpath("//input[@value='" + gender + "']")).click();
        }

        /**
         * Method locates the years of experience field and selects the value
         * 
         * @param year string variable used to pass the value to the field
         */
        public void setYearsOfExperience(int year) {
                chromeDriver.findElement(By.xpath("//input[@value='" + year + "']")).click();
        }

        /**
         * Method locates the date field and sets the date
         * 
         * @param date string variable used to pass the value to the field
         */
        public void setDate(String date) {
                chromeDriver.findElement(
                                By.xpath("/html/body/div[1]/div/div[2]/div[4]/div/form/table/tbody/tr[5]/td[2]/input"))
                                .clear();
                chromeDriver.findElement(
                                By.xpath("/html/body/div[1]/div/div[2]/div[4]/div/form/table/tbody/tr[5]/td[2]/input"))
                                .sendKeys(date);
        }

        /**
         * Method locates the profession field and selects the appropriate value
         * 
         * @param profession string variable used to pass the value to the field
         */
        public void setProfession(String profession) {
                chromeDriver.findElement(By.xpath("//input[@value='" + profession + "']")).click();
        }

        /**
         * Method locates the upload image field and uploads the image
         * 
         * @param imagePath string variable used to pass the image path
         */
        public void uploadImage(String imagePath) {
                chromeDriver.findElement(By.xpath("//input[@name='photo']"))
                                .sendKeys(imagePath);

        }

        /**
         * Method locates the selenium flavours field
         * 
         * @param flavours string variable used to select the value for the field
         */
        public void setFlavoursOfSelenium(String flavours) {
                WebDriverWait wait = new WebDriverWait(chromeDriver, Duration.ofSeconds(5));
                // findElement(By.xpath("//input[@value='" + flavours + "']")).click();
                wait.until(ExpectedConditions.visibilityOfElementLocated(
                                By.xpath("//input[@type='checkbox' and @value='" + flavours + "']"))).click();

        }

        /**
         * Method locates the continent field
         * 
         * @param continent string variable used to select the value for the field
         */
        public void setContinents(String continent) {
                Select continents = new Select(chromeDriver.findElement(By.name("continents")));
                continents.selectByVisibleText(continent);
        }

        /**
         * Method locates the continent field
         * 
         * @param selCommand string variable used to select the value for the field
         */
        public void setSeleniumCommands(int selCommand) {
                Select selCommands = new Select(chromeDriver.findElement(By.name("selenium_commands")));
                selCommands.selectByIndex(selCommand);
        }

        /**
         * Method locates the submit button and performs click action
         */
        public void clickButton() {
                chromeDriver.findElement(By.xpath("//button[@name='submit']"))
                                .click();
        }

        /**
         * Method closes the browser generated alert
         */
        public void acceptSubmitAlert() {
                chromeDriver.switchTo().alert().accept();
        }

        /**
         * Method used to get the current URL after form submission
         */
        public URL getCurrentURL() throws MalformedURLException {
                return new URL(chromeDriver.getCurrentUrl());
        }

        /**
         * Method used to set wait time to load the web page
         * using expected condition
         * 
         * @param testCount string variable defines the current test execution number
         *                  depends on test data
         */
        public void pointToNewTab(int testCount) {
                WebDriverWait wait = new WebDriverWait(chromeDriver, Duration.ofSeconds(5));
                wait.until(ExpectedConditions.numberOfWindowsToBe(testCount + 1));
                Set<String> windowHandleSet = chromeDriver.getWindowHandles();
                String[] windowHandles = new String[windowHandleSet.size()];
                windowHandles = windowHandleSet.toArray(windowHandles);
                chromeDriver.switchTo().window(windowHandles[windowHandleSet.size() - 1]);
                wait.until(ExpectedConditions.elementToBeClickable(By.xpath("//input[@value='RC']")));
        }

        /**
         * Method used to verify the query params from URL after form submission
         * 
         * @param url it provides current URL
         */
        public Map<String, String> splitQuery(URL url) throws UnsupportedEncodingException {
                Map<String, String> queryPairs = new LinkedHashMap<>();
                String query = url.getQuery();
                String[] pairs = query.split("&");
                for (String pair : pairs) {
                        int idx = pair.indexOf("=");
                        queryPairs.put(URLDecoder.decode(pair.substring(0, idx), "UTF-8"),
                                        URLDecoder.decode(pair.substring(idx + 1), "UTF-8"));
                }
                return queryPairs;
        }
}
